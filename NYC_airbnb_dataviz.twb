<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range max='100' min='1' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (df_nyc_airbnb)' inline='true' name='federated.0kq1i9j0ku98sb13yw3tv106bxps' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_nyc_airbnb' name='excel-direct.1clhyov1q7xweg11xhwwf1qpm8kd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/miguel souad/Desktop/m2 imsd/Data viz/df_nyc_airbnb.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Neighborhood of nyc (1)' name='ogrdirect.1c9jths10oa0xj19ogb191qhbnhq'>
            <connection class='ogrdirect' directory='C:/Users/miguel souad/Desktop/m2 imsd/Data viz' filename='Neighborhood of nyc (1).geojson' ogr-grid-shift-folder='C:\Program Files\Tableau\Tableau 2019.3\local\proj4' password='' server='' tablename='' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Sheet1].[neighbourhood_group]' />
              <expression op='[Neighborhood of nyc (1).geojson].[boro_name]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1clhyov1q7xweg11xhwwf1qpm8kd' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='host_id' ordinal='0' />
              <column datatype='string' name='neighbourhood_group' ordinal='1' />
              <column datatype='string' name='neighbourhood' ordinal='2' />
              <column datatype='real' name='latitude' ordinal='3' />
              <column datatype='real' name='longitude' ordinal='4' />
              <column datatype='string' name='room_type' ordinal='5' />
              <column datatype='integer' name='price' ordinal='6' />
              <column datatype='integer' name='minimum_nights' ordinal='7' />
              <column datatype='integer' name='number_of_reviews' ordinal='8' />
              <column datatype='real' name='reviews_per_month' ordinal='9' />
              <column datatype='integer' name='calculated_host_listings_count' ordinal='10' />
              <column datatype='integer' name='availability_365' ordinal='11' />
            </columns>
          </relation>
          <relation connection='ogrdirect.1c9jths10oa0xj19ogb191qhbnhq' name='Neighborhood of nyc (1).geojson' table='[Neighborhood of nyc (1).geojson]' type='table'>
            <columns>
              <column datatype='string' name='ntacode' ordinal='0' />
              <column datatype='string' name='shape_area' ordinal='1' />
              <column datatype='string' name='county_fips' ordinal='2' />
              <column datatype='string' name='ntaname' ordinal='3' />
              <column datatype='string' name='shape_leng' ordinal='4' />
              <column datatype='string' name='boro_name' ordinal='5' />
              <column datatype='string' name='boro_code' ordinal='6' />
              <column datatype='spatial' name='Geometry' ordinal='7' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>host_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host_id]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>host_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood_group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neighbourhood_group]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>neighbourhood_group</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighbourhood</remote-name>
            <remote-type>130</remote-type>
            <local-name>[neighbourhood]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>neighbourhood</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[room_type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>room_type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LFR_RFR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minimum_nights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minimum_nights]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>minimum_nights</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_reviews]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>number_of_reviews</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reviews_per_month</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reviews_per_month]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>reviews_per_month</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>calculated_host_listings_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[calculated_host_listings_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>calculated_host_listings_count</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>availability_365</remote-name>
            <remote-type>20</remote-type>
            <local-name>[availability_365]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>availability_365</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ntacode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ntacode]</local-name>
            <parent-name>[Neighborhood of nyc (1).geojson]</parent-name>
            <remote-alias>ntacode</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shape_area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[shape_area]</local-name>
            <parent-name>[Neighborhood of nyc (1).geojson]</parent-name>
            <remote-alias>shape_area</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_fips</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_fips]</local-name>
            <parent-name>[Neighborhood of nyc (1).geojson]</parent-name>
            <remote-alias>county_fips</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ntaname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ntaname]</local-name>
            <parent-name>[Neighborhood of nyc (1).geojson]</parent-name>
            <remote-alias>ntaname</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shape_leng</remote-name>
            <remote-type>129</remote-type>
            <local-name>[shape_leng]</local-name>
            <parent-name>[Neighborhood of nyc (1).geojson]</parent-name>
            <remote-alias>shape_leng</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boro_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[boro_name]</local-name>
            <parent-name>[Neighborhood of nyc (1).geojson]</parent-name>
            <remote-alias>boro_name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boro_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[boro_code]</local-name>
            <parent-name>[Neighborhood of nyc (1).geojson]</parent-name>
            <remote-alias>boro_code</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[Neighborhood of nyc (1).geojson]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>19</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Index' datatype='integer' name='[Calculation_235031652291776512]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Availability 365' datatype='integer' name='[availability_365]' role='measure' type='quantitative' />
      <column caption='Boro Code' datatype='string' name='[boro_code]' role='dimension' type='nominal' />
      <column caption='Boro Name' datatype='string' name='[boro_name]' role='dimension' type='nominal' />
      <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated_host_listings_count]' role='measure' type='quantitative' />
      <column caption='County Fips' datatype='string' name='[county_fips]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
      <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Ntacode' datatype='string' name='[ntacode]' role='dimension' type='nominal' />
      <column caption='Ntaname' datatype='string' name='[ntaname]' role='dimension' type='nominal' />
      <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
      <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
      <column caption='Reviews Per Month' datatype='real' name='[reviews_per_month]' role='dimension' type='quantitative' />
      <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
      <column caption='Shape Area' datatype='string' name='[shape_area]' role='dimension' type='nominal' />
      <column caption='Shape Leng' datatype='string' name='[shape_leng]' role='dimension' type='nominal' />
      <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Count' name='[cnt:price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[minimum_nights]' derivation='Max' name='[max:minimum_nights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[minimum_nights]' derivation='Min' name='[min:minimum_nights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
      <column-instance aggregation-param='25' column='[minimum_nights]' derivation='Percentile' name='[prc25:minimum_nights:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='50' column='[minimum_nights]' derivation='Percentile' name='[prc50:minimum_nights:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='75' column='[minimum_nights]' derivation='Percentile' name='[prc75:minimum_nights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.692982' measure-ordering='alphabetic' measure-percentage='0.256579' parameter-percentage='0.0504386' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[min:minimum_nights:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[max:minimum_nights:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[prc75:minimum_nights:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[sum:price:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[cnt:price:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[prc50:minimum_nights:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[avg:price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[prc25:minimum_nights:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:neighbourhood:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bay Terrace&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bushwick&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Concourse Village&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grant City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kensington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Midwood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oakwood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rockaway Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stuyvesant Town&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Farms&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Allerton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Borough Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Flatbush&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fort Greene&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Howland Hook&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manhattan Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New Brighton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Queens Village&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Woodside&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Astoria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bronxdale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;College Point&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Village&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jackson Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Melrose&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NoHo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Richmond Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spuyten Duyvil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vinegar Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bayswater&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Castle Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cypress Hills&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fieldston&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenwich Village&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kips Bay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morris Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parkchester&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rossville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Throgs Neck&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Whitestone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bay Terrace, Staten Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambria Heights&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coney Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eltingville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gravesend&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kew Gardens&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mill Basin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Olinville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roosevelt Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Village&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bath Beach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brooklyn Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbia St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eastchester&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gowanus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Middle Village&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nolita&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Richmondtown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Albans&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wakefield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bergen Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Claremont Village&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dyker Heights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fordham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Holliswood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Longwood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Navy Yard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prospect Heights&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SoHo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Two Bridges&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Woodlawn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arden Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Breezy Point&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clinton Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Harlem&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fort Hamilton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Huguenot&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marble Hill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Dorp&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Randall Manor&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Ozone Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper East Side&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;City Island&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Downtown Brooklyn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flatlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Highbridge&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Little Neck&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Hope&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Port Richmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shore Acres&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tremont&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Windsor Terrace&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Battery Park City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Edenwald&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gramercy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica Estates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Midland Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Riverdale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ridgewood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St. George&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington Heights&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bedford-Stuyvesant&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Castleton Corners&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ditmars Steinway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Financial District&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grymes Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laurelton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morrisania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pelham Bay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Schuylerville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Todt Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Williamsbridge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belle Harbor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dongan Hills&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Flatbush&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Harlem&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lighthouse Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mott Haven&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pelham Gardens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sea Gate&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tompkinsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Williamsburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bensonhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Civic Center&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DUMBO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flushing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hollis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Long Island City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murray Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prince&apos;s Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Silver Lake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tribeca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Woodhaven&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boerum Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clason Point&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Forest Hills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Howard Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lower East Side&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Neponsit&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prospect-Lefferts Gardens&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Soundview&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Unionport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Woodrow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Baychester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canarsie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Corona&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Emerson Hill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Great Kills&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kew Gardens Hills&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morningside Heights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ozone Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rosebank&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sunset Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Westchester Square&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bay Ridge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bull&apos;s Head&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Concourse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Edgemere&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Graniteville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica Hills&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Midtown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norwood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Riverdale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stapleton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Brighton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arrochar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Briarwood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Co-op City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Morrisania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fort Wadsworth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hunts Point&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mariners Harbor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Dorp Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Red Hook&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Slope&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Upper West Side&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bellerose&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chinatown&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Douglaston&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Flatiron District&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hell&apos;s Kitchen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Little Italy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Eden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Port Morris&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sheepshead Bay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tottenville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Willowbrook&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayside&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carroll Gardens&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Crown Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Far Rockaway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenpoint&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kingsbridge&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morris Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Park Slope&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rosedale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Theater District&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Westerleigh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arverne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brighton Beach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cobble Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East New York&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fresh Meadows&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Inwood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maspeth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Springville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rego Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springfield Gardens&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Van Nest&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Listings by neighborhood'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Listings by Neighborhood group</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_nyc_airbnb)' name='federated.0kq1i9j0ku98sb13yw3tv106bxps' />
          </datasources>
          <datasource-dependencies datasource='federated.0kq1i9j0ku98sb13yw3tv106bxps'>
            <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated_host_listings_count]' role='measure' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[calculated_host_listings_count]' derivation='Sum' name='[pcto:sum:calculated_host_listings_count:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]' />
              <wedge-size column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[pcto:sum:calculated_host_listings_count:qk]' />
              <size column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[pcto:sum:calculated_host_listings_count:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D206F62C-0214-4436-BEF8-C4F0FEB23F00}' />
    </worksheet>
    <worksheet name='Minimun night by Neighborhood'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_nyc_airbnb)' name='federated.0kq1i9j0ku98sb13yw3tv106bxps' />
          </datasources>
          <datasource-dependencies datasource='federated.0kq1i9j0ku98sb13yw3tv106bxps'>
            <column-instance column='[minimum_nights]' derivation='Max' name='[max:minimum_nights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[minimum_nights]' derivation='Min' name='[min:minimum_nights:qk]' pivot='key' type='quantitative' />
            <column caption='Minimum Nights' datatype='integer' name='[minimum_nights]' role='measure' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column-instance aggregation-param='25' column='[minimum_nights]' derivation='Percentile' name='[prc25:minimum_nights:qk]' pivot='key' type='quantitative' />
            <column-instance aggregation-param='50' column='[minimum_nights]' derivation='Percentile' name='[prc50:minimum_nights:qk]' pivot='key' type='quantitative' />
            <column-instance aggregation-param='75' column='[minimum_nights]' derivation='Percentile' name='[prc75:minimum_nights:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[min:minimum_nights:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[prc25:minimum_nights:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[prc50:minimum_nights:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[prc75:minimum_nights:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[max:minimum_nights:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[min:minimum_nights:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[prc25:minimum_nights:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[prc50:minimum_nights:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[prc75:minimum_nights:qk]&quot;</bucket>
              <bucket>&quot;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[max:minimum_nights:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]</rows>
        <cols>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{047AEAD8-4498-469C-ACFA-0927EF921A0B}' />
    </worksheet>
    <worksheet name='Reviews by neighborhood'>
      <layout-options>
        <title>
          <formatted-text>
            <run> Reviews by Neighborhouud grp</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_nyc_airbnb)' name='federated.0kq1i9j0ku98sb13yw3tv106bxps' />
          </datasources>
          <datasource-dependencies datasource='federated.0kq1i9j0ku98sb13yw3tv106bxps'>
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
            <column-instance column='[number_of_reviews]' derivation='Sum' name='[pcrk:sum:number_of_reviews:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
            </column-instance>
            <column-instance column='[number_of_reviews]' derivation='Sum' name='[pcto:sum:number_of_reviews:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]' />
              <wedge-size column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[pcto:sum:number_of_reviews:qk:2]' />
              <size column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[pcrk:sum:number_of_reviews:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B0C89341-461E-470C-A96F-646C716ECF3B}' />
    </worksheet>
    <worksheet name='Room type by N'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_nyc_airbnb)' name='federated.0kq1i9j0ku98sb13yw3tv106bxps' />
          </datasources>
          <datasource-dependencies datasource='federated.0kq1i9j0ku98sb13yw3tv106bxps'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[avg:price:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[avg:price:qk]</rows>
        <cols>([federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:room_type:nk] / [federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk])</cols>
      </table>
      <simple-id uuid='{2984DA93-D4EF-49AF-9538-138A1BBA46FF}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run>wich area is the best in 2019 ? (by the number of reviews)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_nyc_airbnb)' name='federated.0kq1i9j0ku98sb13yw3tv106bxps' />
          </datasources>
          <datasource-dependencies datasource='federated.0kq1i9j0ku98sb13yw3tv106bxps'>
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
            <column-instance column='[number_of_reviews]' derivation='Sum' name='[pcto:sum:number_of_reviews:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[pcto:sum:number_of_reviews:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{E3A12132-2956-4428-950D-AA15179C2E22}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run>wich type of listings are in NYC ?&#10;map showing count of listings type by borough</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_nyc_airbnb)' name='federated.0kq1i9j0ku98sb13yw3tv106bxps' />
          </datasources>
          <datasource-dependencies datasource='federated.0kq1i9j0ku98sb13yw3tv106bxps'>
            <column-instance column='[room_type]' derivation='Count' name='[cnt:room_type:qk]' pivot='key' type='quantitative' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]' value='true' />
            <format attr='display' field='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:room_type:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:room_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[cnt:room_type:qk]</rows>
        <cols>([federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk] / [federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:room_type:nk])</cols>
      </table>
      <simple-id uuid='{FCA0B2EE-5FA1-4BEA-8B8A-6D1E05DECFF0}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Un apercu des annonces par quartier </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_nyc_airbnb)' name='federated.0kq1i9j0ku98sb13yw3tv106bxps' />
          </datasources>
          <datasource-dependencies datasource='federated.0kq1i9j0ku98sb13yw3tv106bxps'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood:nk]'>
            <groupfilter count='35' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:neighbourhood:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood:nk]' direction='DESC' using='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:room_type:nk]' />
              <color column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[sum:Number of Records:qk]</rows>
        <cols>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood:nk]</cols>
      </table>
      <simple-id uuid='{195577AD-3D3D-41C5-ADD0-3DE91472971F}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Les annonces par type de logement</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_nyc_airbnb)' name='federated.0kq1i9j0ku98sb13yw3tv106bxps' />
          </datasources>
          <datasource-dependencies datasource='federated.0kq1i9j0ku98sb13yw3tv106bxps'>
            <column caption='Calculated Host Listings Count' datatype='integer' name='[calculated_host_listings_count]' role='measure' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
            <column-instance column='[calculated_host_listings_count]' derivation='Sum' name='[sum:calculated_host_listings_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:room_type:nk]'>
            <groupfilter function='level-members' level='[none:room_type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:room_type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[sum:calculated_host_listings_count:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:room_type:nk]' />
              <wedge-size column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[sum:calculated_host_listings_count:qk]' />
              <size column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[sum:calculated_host_listings_count:qk]' />
              <lod column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A3AEF6BB-39C3-493A-8CFA-831F005A8B6A}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources />
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7C2971C5-47A9-4305-A3A6-94BF07296090}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_nyc_airbnb)' name='federated.0kq1i9j0ku98sb13yw3tv106bxps' />
          </datasources>
          <datasource-dependencies datasource='federated.0kq1i9j0ku98sb13yw3tv106bxps'>
            <column caption='Index' datatype='integer' name='[Calculation_235031652291776512]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Count' name='[cnt:price:qk]' pivot='key' type='quantitative' />
            <column caption='Neighbourhood' datatype='string' name='[neighbourhood]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[neighbourhood]' derivation='None' name='[none:neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_235031652291776512]' derivation='User' name='[usr:Calculation_235031652291776512:qk:6]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood:nk]' ordering-type='Field'>
                <order field='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]' />
                <order field='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood:nk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood:nk]' direction='DESC' using='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[avg:price:qk]' />
          <filter class='quantitative' column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[usr:Calculation_235031652291776512:qk:6]' included-values='in-range'>
            <min>1</min>
            <max>5</max>
          </filter>
          <slices>
            <column>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[usr:Calculation_235031652291776512:qk:6]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[cnt:price:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk] / [federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood:nk])</rows>
        <cols>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[avg:price:qk]</cols>
      </table>
      <simple-id uuid='{3C4FFBA8-D159-4A44-9CB8-44ED1A5C0D45}' />
    </worksheet>
    <worksheet name='map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (df_nyc_airbnb)' name='federated.0kq1i9j0ku98sb13yw3tv106bxps' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0kq1i9j0ku98sb13yw3tv106bxps'>
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='County Fips' datatype='string' name='[county_fips]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column caption='Neighbourhood Group' datatype='string' name='[neighbourhood_group]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[county_fips]' derivation='None' name='[none:county_fips:nk]' pivot='key' type='nominal' />
            <column-instance column='[neighbourhood_group]' derivation='None' name='[none:neighbourhood_group:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]' />
              <lod column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[clct:Geometry:nk]' />
              <lod column='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:county_fips:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[Latitude (generated)]</rows>
        <cols>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5BA590C1-566D-41AA-9CB5-1ECF0C82984C}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='63875' id='3' name='map' w='33300' x='63400' y='2625' />
        <zone h='35875' id='4' name='Room type by N' w='55100' x='2300' y='1500' />
        <zone h='31625' id='9' name='Listings by neighborhood' w='33700' x='0' y='38000' />
        <zone h='31500' id='10' name='Reviews by neighborhood' w='30500' x='31800' y='38000' />
        <zone h='27500' id='14' name='Minimun night by Neighborhood' w='68400' x='4500' y='68875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='16' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='35875' id='4' is-fixed='true' name='Room type by N' w='55100' x='2300' y='1500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='63875' id='3' is-fixed='true' name='map' w='33300' x='63400' y='2625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='31625' id='9' is-fixed='true' name='Listings by neighborhood' w='33700' x='0' y='38000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='252' h='31500' id='10' is-fixed='true' name='Reviews by neighborhood' w='30500' x='31800' y='38000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='220' h='27500' id='14' is-fixed='true' name='Minimun night by Neighborhood' w='68400' x='4500' y='68875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FDDBCEFE-31CB-4D0A-9D9E-85E0C02669F0}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:host_id:ok]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood:nk]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93314D89-8BF2-49FE-8C20-2A201FA573BE}' />
    </window>
    <window class='worksheet' name='Room type by N'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D61B4CC8-8CDE-4931-AC8D-591BFD6584C4}' />
    </window>
    <window class='worksheet' name='Listings by neighborhood'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[pcto:sum:calculated_host_listings_count:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:availability_365:qk]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:host_id:ok]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood:nk]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:reviews_per_month:qk]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:room_type:nk]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[sum:number_of_reviews:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B0021E1-0789-4880-81BE-02511F5B75E3}' />
    </window>
    <window class='worksheet' name='Reviews by neighborhood'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[pcrk:sum:number_of_reviews:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:reviews_per_month:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CB2A4D2-DA7B-4B5A-A228-A5950170FC8E}' />
    </window>
    <window class='worksheet' name='Minimun night by Neighborhood'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[:Measure Names]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52832F1D-DB68-4767-BAB6-B79DA3857C97}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood:nk]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[sum:price:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8EEE1F5-A5E7-4ED0-AB78-FEA934759535}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[usr:Calculation_235031652291776512:qk:6]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood:nk]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[usr:Calculation_235031652291776512:ok:4]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[usr:Calculation_235031652291776512:ok:7]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[usr:Calculation_235031652291776512:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D18EC19-FEE1-407A-8C2A-5CF189F68AE8}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood:nk]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8B4DBBE-117B-4B3A-8C53-CE4F6E162AA9}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:room_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood_group:nk]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B7F1BCC-0AD5-4C08-BAEC-37D7056C3580}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='35'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:room_type:nk]&#10;[federated.0kq1i9j0ku98sb13yw3tv106bxps].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[:Measure Names]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood:nk]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{41E4A11A-EF3D-430D-8B09-953E18BF1391}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:room_type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[sum:calculated_host_listings_count:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:neighbourhood:nk]</field>
            <field>[federated.0kq1i9j0ku98sb13yw3tv106bxps].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{762AB989-2341-4B08-AAE2-0683856B6EB1}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Listings by neighborhood'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Minimun night by Neighborhood'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Reviews by neighborhood'>
          <zoom type='entire-view' />
          <highlight field='[federated.0kq1i9j0ku98sb13yw3tv106bxps].[pcrk:sum:number_of_reviews:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Room type by N'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2B9B3AFC-6AE3-494D-9E4C-51A304A337EA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AZIy2xiMmzHRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Listings by neighborhood' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Minimun night by Neighborhood' width='192'>
      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
      BCCUJgEIpf03WmfSsGfVFPIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Reviews by neighborhood' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Room type by N' width='192'>
      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
      M/qdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='124' name='Sheet 10' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
      PkdtwCQzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='Sheet 13' width='164'>
      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
      PQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
